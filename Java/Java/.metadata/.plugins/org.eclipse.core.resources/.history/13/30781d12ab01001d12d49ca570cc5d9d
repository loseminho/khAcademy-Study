package kh.java.word.controller;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;

import kh.java.word.view.WordView;

public class WordController {
	private ArrayList<String> words;
	private WordView view;
	private Random r;
	private int win;
	private int lose;

	public WordController() {
		super();
		words = new ArrayList<String>();
		getWordFile();
		view = new WordView();
		r = new Random();
	}

	public void main() {
		while (true) {
			int sel = view.showMenu();
			switch (sel) {
			case 1:
				startGame();
				break;
			case 2:

				break;
			case 0:
				System.out.println("프로그램을 종료합니다.");
				return;
			default:
				System.out.println("잘못 입력하셨습니다.");
				break;
			}
		}
	}

	public void startGame() {
		//1. words리스트에서 랜덤 단어 1개 추출
		int random = r.nextInt(words.size());
		String word = words.get(random);
		view.startGame();
		view.comTurn(word);
		while(true) {
			char lastLetter = word.charAt(word.length()-1);
			String userWord = view.userTurn(lastLetter);
			int userResult = checkWord(userWord,lastLetter);
			
			if(userResult == -1) {
				return;
			}else if(userResult == 1) {
				continue;
			}
			char userLastLetter = userWord.charAt(userWord.length()-1);
			comTurn(userLastLetter);
		}
	}
	public String comTurn(char lastletter) {
		ArrayList<String> arr = new ArrayList<String>();
		for(String pick : words) {
			if(pick.charAt(0) == lastletter) {
				arr.add(pick);
			}
		}
		if(arr == null) {
			return null;
		}else {
			int random = r.nextInt(arr.size());
			String comWord = arr.get(random);
			return comWord;
		}
		//1.문자열을 저장할 ArrayList생성
		//2. words 중에 사용자가 사용한 마지막 글자로 시작하는 단어를 생성한 리스트에 add
		//만약에 마지막글자로 시작하는 단어가 하나도 없다면
		//return null;
		//단어가 있으면 단어 중 랜덤 단어 1개 리턴.
	}
	public int checkWord(String userWord,char lastLetter) {
//		if(userWord.equals("gg")) {
//			view.loseMgs();
//			lose++;
//			return -1;
//		}else if(userWord.charAt(0) !=lastLetter) {
//			view.wrongMgs();
//			lose++;
//			return 1;
//		}else if(words.contains(userWord)) {
//			return 0;
//		}else{
//			view.noSearchWord();
//			lose++;
//			return 1;
//		}
	}

	public void getWordFile() {
		// words 파일을 연결, 연결하기 위해서는 읽어와야함.
		BufferedReader br = null;
		try {
			FileReader fr = new FileReader("words.txt");
			// 보조 스트림 생성
			br = new BufferedReader(fr);
			while (true) {
				String word = br.readLine();// 한줄 읽어와서 word로 저장
				if (word == null) {
					break;
				}
				words.add(word);
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				br.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
}
