/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.82
 * Generated at: 2022-10-14 08:59:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.dm;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dmMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/jinyh/Documents/workspace-sts-3.9.13.RELEASE/05_Spring_Websocket/src/main/webapp/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1664420014000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/css/dmCss.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.1.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("	<h1>내 쪽지함</h1>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<button onclick=\"sendDmModal();\">쪽지보내기</button>\r\n");
      out.write("	<div id=\"sendDm-modal\" class=\"modal-wrapper\">\r\n");
      out.write("		<div class=\"modal\">\r\n");
      out.write("			<div class=\"modal-header\">\r\n");
      out.write("				<h2>쪽지 보내기</h2>\r\n");
      out.write("			</div>\r\n");
      out.write("			<hr>\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("				<div class=\"sendDmFrm\">\r\n");
      out.write("					<label>수신자 : </label>\r\n");
      out.write("					<select name=\"receiver\"></select>\r\n");
      out.write("					<textarea name=\"dmContent\"></textarea>\r\n");
      out.write("					<input type=\"hidden\" id=\"sender\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.m.memberId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("					<button onclick=\"dmSend();\">쪽지보내기</button>\r\n");
      out.write("					<button onclick=\"closeModal();\">닫기</button>\r\n");
      out.write("					\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("		<fieldset>\r\n");
      out.write("			<legend>쪽지 보내기</legend>\r\n");
      out.write("			<table border=\"1\">\r\n");
      out.write("				<tr><th>받는 사람</th></tr>\r\n");
      out.write("				<tr><td><input type=\"text\" id=\"receiver2\"></td></tr>\r\n");
      out.write("				<tr><th>내용</th></tr>\r\n");
      out.write("				<tr><td><textarea id=\"dmContent2\"></textarea></td></tr>\r\n");
      out.write("				<tr><td><button class=\"btn bc11\" id =\"bc11\" onclick=\"sendDm('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.m.memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\">쪽지 보내기</button></td></tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</fieldset>\r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h3>받은 쪽지함</h3>\r\n");
      out.write("	<button onclick=\"getReceiveDm();\">받은 쪽지 가져오기</button>\r\n");
      out.write("	<table border=\"1\" class=\"receiveDmTbl\">\r\n");
      out.write("		<thead>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>보낸사람</th>\r\n");
      out.write("				<th>내용</th>\r\n");
      out.write("				<th>시간</th>\r\n");
      out.write("				<th>읽음 여부</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</thead>\r\n");
      out.write("		<tbody></tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("	<div id=\"dmDetail\" class=\"modal-wrapper\">\r\n");
      out.write("		<div class=\"modal\">\r\n");
      out.write("			<div class=\"modal-header\">\r\n");
      out.write("				<h2>쪽지 내용</h2>\r\n");
      out.write("			</div>\r\n");
      out.write("			<hr>\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("				<div class=\"dmFrm\">\r\n");
      out.write("					<div>\r\n");
      out.write("						<span>발신자 : </span>\r\n");
      out.write("						<span id=\"detailSender\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div>\r\n");
      out.write("						<span>날짜 : </span>\r\n");
      out.write("						<span id=\"detailDate\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div id=\"detailContent\"></div>\r\n");
      out.write("					<button onclick=\"replyDm();\">답장</button>\r\n");
      out.write("					<button onclick=\"closeDetail();\">닫기</button>\r\n");
      out.write("					\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	<h3>보낸 쪽지함</h3>\r\n");
      out.write("	<button onclick=\"getSendDm();\">보낸 쪽지 가져오기</button>\r\n");
      out.write("	<table border=\"1\" class=\"sendDmTbl\">\r\n");
      out.write("		<thead>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>받은사람</th>\r\n");
      out.write("				<th>내용</th>\r\n");
      out.write("				<th>시간</th>\r\n");
      out.write("				<th>읽음 여부</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</thead>\r\n");
      out.write("			<tbody>\r\n");
      out.write("			\r\n");
      out.write("			</tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\" src=\"/resources/js/dm.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
