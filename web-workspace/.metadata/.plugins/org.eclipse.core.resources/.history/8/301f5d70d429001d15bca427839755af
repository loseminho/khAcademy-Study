package kr.or.iei.notice.model.service;

import java.sql.Connection;
import java.util.ArrayList;

import common.JDBCTemplate;
import kr.or.iei.notice.model.dao.NoticeDao;
import kr.or.iei.notice.model.vo.Notice;

public class NoticeService {
	private NoticeDao dao;

	public NoticeService() {
		super();
		dao = new NoticeDao();
	}

	public ArrayList<Notice> selectNoticeList(int reqPage) {
		Connection conn = JDBCTemplate.getConnection();
		
		//1. 한 페이지 당 게시물 수를 지정 -> 10개
		int numPerPage = 10;
		//요청 페이지=1번 페이지 -> 가장 최신글 10개를 가져와 함. 1~10
		// reqPage==1 -> 최신글 1~10번까지
		//요청 페이지가 2페이지일 경우 -> 11~20
		// reqPage==2 -> 최신글 11~20번까지
		int end = numPerPage*reqPage;
		int start = end - numPerPage + 1;
		ArrayList<Notice> list = dao.selectNoticeList(conn,start, end);
		
		//페이징처리
		//전체페이지 수 계산 -> 전체 게시물 수 조회
		int totalCount = dao.selectNoticeCount(conn);
		//전체 페이지
		int totalPage = 0;
		if(totalCount%numPerPage ==0) {
			//페이지가 딱 떨어지는 상황 = 90개 = 9페이지
			totalPage = totalCount/numPerPage;
		}else {
			//나머지를 담을 페이지 하나 더 추가 = 85개 = 8페이지+1페이지
			totalPage = totalCount/numPerPage + 1;
		}
		
		//지정해줘야 할 값 페이지 네비게이션 사이즈
		int pageNaviSize = 5;
		
		//페이지 네비게이션 시작번호 지정
		//reqPage 1~5 -> 1부터 시작해서 5개  -> 1 2 3 4 5
		//reqPage 6~10 -> 6부터 시작해서 5개 -> 6 7 8 9 10
		int pageNo = ((reqPage-1)/pageNaviSize)*pageNaviSize + 1;
		
		//페이지 네비게이션 제작 시작
		String pageNavi = "<ul class='pagination circle-style'>";
		
		pageNavi = "</ul>";
		
		
		return null;
	}
	
}
