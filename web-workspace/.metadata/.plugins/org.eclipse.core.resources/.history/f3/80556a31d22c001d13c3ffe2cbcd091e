package kr.or.iei.notice.model.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import common.JDBCTemplate;
import kr.or.iei.notice.model.vo.Notice;
import kr.or.iei.notice.model.vo.NoticeComment;

public class NoticeDao {

	public ArrayList<Notice> selectNoticeList(Connection conn, int start, int end) {
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		ArrayList<Notice> list = new ArrayList<Notice>();
		String query = "select * from(select rownum as rnum, n.* from (select * from notice order by notice_no desc)n) where rnum between ? and ?";
		try {
			pstmt=conn.prepareStatement(query);
			pstmt.setInt(1, start);
			pstmt.setInt(2, end);
			rset = pstmt.executeQuery();
			while(rset.next()) {
				Notice n = new Notice();
				n.setNoticeNo(rset.getInt("notice_no"));
				n.setNoticeTitle(rset.getString("notice_title"));
				n.setNoticeWriter(rset.getString("notice_writer"));
				n.setNoticeContent(rset.getString("notice_content"));
				n.setReadCount(rset.getInt("read_count"));
				n.setRegDate(rset.getString("reg_date"));
				n.setFilename(rset.getString("filename"));
				n.setFilepath(rset.getString("filepath"));
				list.add(n);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			JDBCTemplate.close(rset);
			JDBCTemplate.close(pstmt);
		}
		return list;
	}

	public int selectNoticeCount(Connection conn) {
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		int totalCount = 0;
		String query = "select count(*) as cnt from notice";
		try {
			pstmt = conn.prepareStatement(query);
			rset = pstmt.executeQuery();
			if(rset.next()) {
				totalCount = rset.getInt("cnt");
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			JDBCTemplate.close(rset);
			JDBCTemplate.close(pstmt);
		}
		
		return totalCount;
	}

	public int insertNotice(Connection conn, Notice n) {
		PreparedStatement pstmt = null;
		int result = 0;
		String query = "insert into notice values(notice_seq.nextval,?,?,?,0,to_char(sysdate,'yyyy-mm-dd'),?,?)";
		
		try {
			pstmt = conn.prepareStatement(query);
			pstmt.setString(1, n.getNoticeTitle());
			pstmt.setString(2, n.getNoticeWriter());
			pstmt.setString(3, n.getNoticeContent());
			pstmt.setString(4, n.getFilename());
			pstmt.setString(5, n.getFilepath());
			result = pstmt.executeUpdate();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			JDBCTemplate.close(pstmt);
		}
		return result;
	}

	public Notice selectOneNotice(Connection conn, int noticeNo) {
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		Notice n = null;
		String query = "select * from notice where notice_no=?";
		
		try {
			pstmt = conn.prepareStatement(query);
			pstmt.setInt(1, noticeNo);
			rset = pstmt.executeQuery();
			if(rset.next()) {
				n = new Notice();
				n.setFilename(rset.getString("filename"));
				n.setFilepath(rset.getString("filepath"));
				n.setNoticeContent(rset.getString("notice_content"));
				n.setNoticeNo(rset.getInt("notice_no"));
				n.setNoticeTitle(rset.getString("notice_title"));
				n.setNoticeWriter(rset.getString("notice_writer"));
				n.setReadCount(rset.getInt("read_count"));
				n.setRegDate(rset.getString("reg_date"));
				
				
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			JDBCTemplate.close(rset);
			JDBCTemplate.close(pstmt);
		}
		return n;
	}

	public int updateReadCount(Connection conn, int noticeNo) {
		PreparedStatement pstmt = null;
		int result = 0;
		String query = "update notice set read_count = read_count+1 where notice_no=?";
		try {
			pstmt=conn.prepareStatement(query);
			pstmt.setInt(1,  noticeNo);
			result = pstmt.executeUpdate();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			JDBCTemplate.close(pstmt);
		}
		return result;
	}

	public int deleteNotice(Connection conn, int noticeNo) {
		PreparedStatement pstmt = null;
		int result = 0;
		String query = "delete from notice where notice_no=?";
		try {
			pstmt = conn.prepareStatement(query);
			pstmt.setInt(1,  noticeNo);
			result = pstmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			JDBCTemplate.close(pstmt);
		}
		return result;
	}

	public int updateNotice(Connection conn, Notice n) {
		PreparedStatement pstmt = null;
		int result = 0;
		String query = "update notice set notice_title=?, notice_content=?, filename=?, filepath=? where notice_no=?";
		try {
			pstmt = conn.prepareStatement(query);
			pstmt.setString(1, n.getNoticeTitle());
			pstmt.setString(2, n.getNoticeContent());
			pstmt.setString(3, n.getFilename());
			pstmt.setString(4, n.getFilepath());
			pstmt.setInt(5, n.getNoticeNo());
			result = pstmt.executeUpdate();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			JDBCTemplate.close(pstmt);
		}
		
		
		return result;
	}
	
	public int insertNoticeComment(Connection conn, NoticeComment nc) {
	      PreparedStatement pstmt = null;
	      int result = 0;
	      
	      String query = "insert into notice_comment values(nc_seq.nextval, ?, ?, to_char(sysdate,'yyyy-mm-dd'), ?,?)";
	      
	      try {
	         pstmt = conn.prepareStatement(query);
	         pstmt.setString(1, nc.getNcWriter());
	         pstmt.setString(2, nc.getNcContent());
	         pstmt.setInt(3, nc.getNoticeRef());
	         if(nc.getNoticeRef() == 0) {
	            pstmt.setString(4, null);
	         } else {
	            pstmt.setInt(4, nc.getNoticeRef());
	         }
	         pstmt.setString(4, (nc.getNoticeRef() == 0)? null : String.valueOf(nc.getNoticeRef()));
	         
	         result = pstmt.executeUpdate();
	      } catch (SQLException e) {
	         // TODO Auto-generated catch block
	         e.printStackTrace();
	      } finally {
	         JDBCTemplate.close(pstmt);
	      }
	      
	      return result;
	   }

	   public ArrayList<NoticeComment> selectNoticeComment(Connection conn, int noticeNo) {
	      PreparedStatement pstmt = null;
	      ResultSet rset = null;
	      
	      ArrayList<NoticeComment> commentList = new ArrayList<NoticeComment>();
	      String query = "select * from notice_comment where notice_ref = ? and nc_ref is null order by 1";
	      
	      try {
	         pstmt = conn.prepareStatement(query);
	         pstmt.setInt(1, noticeNo);
	         
	         rset = pstmt.executeQuery();
	         if(rset.next()) {
	            NoticeComment nc = new NoticeComment();
	            nc.setNcContent(query);
	            nc.setNcDate(rset.getString("notice_date"));
	            nc.setNcNo(rset.getInt("nc_no"));
	            nc.setNcRef(rset.getInt("nc_ref"));
	            nc.setNcWriter(rset.getString("nc_writer"));
	            nc.setNoticeRef(rset.getInt("notice_ref"));
	            commentList.add(nc);
	         }
	      } catch (SQLException e) {
	         // TODO Auto-generated catch block
	         e.printStackTrace();
	      } finally {
	         JDBCTemplate.close(pstmt);
	         JDBCTemplate.close(rset);
	         
	      }
	      
	      
	      return commentList;
	   }

	   public ArrayList<NoticeComment> selectNoticeReComment(Connection conn, int noticeNo) {
	      PreparedStatement pstmt = null;
	      ResultSet rset = null;
	      
	      ArrayList<NoticeComment> commentList = new ArrayList<NoticeComment>();
	      String query = "select * from notice_comment where notice_ref = ? and nc_ref is not null order by 1";
	      
	      try {
	         pstmt = conn.prepareStatement(query);
	         pstmt.setInt(1, noticeNo);
	         
	         rset = pstmt.executeQuery();
	         if(rset.next()) {
	            NoticeComment nc = new NoticeComment();
	            nc.setNcContent(rset.getString("nc_comment"));
	            nc.setNcDate(rset.getString("nc_date"));
	            nc.setNcNo(rset.getInt("nc_no"));
	            nc.setNcRef(rset.getInt("nc_ref"));
	            nc.setNcWriter(rset.getString("nc_writer"));
	            nc.setNoticeRef(rset.getInt("notice_ref"));
	            commentList.add(nc);
	         }
	      } catch (SQLException e) {
	         // TODO Auto-generated catch block
	         e.printStackTrace();
	      } finally {
	         JDBCTemplate.close(pstmt);
	         JDBCTemplate.close(rset);
	         
	      }
	      
	      return commentList;
	   }
	
}
