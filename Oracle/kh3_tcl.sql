--TCL

CREATE TABLE USER_TBL(
    USER_NO                 NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20)    UNIQUE NOT NULL,
    USER_PW VARCHAR2(30)    NOT NULL
);
INSERT INTO USER_TBL VALUES(1,'user01','1111');
INSERT INTO USER_TBL VALUES(2,'user02','2222');
INSERT INTO USER_TBL VALUES(3,'user03','3333');
COMMIT;
INSERT INTO USER_TBL VALUES(4,'user04','4444');
SELECT * FROM USER_TBL;
--ROLLBACK 시, 마지막 COMMIT한 데이터 기록으로 돌아감.
ROLLBACK;
INSERT INTO USER_TBL VALUES(5,'user05','5555');
UPDATE USER_TBL SET USER_PW='5555' WHERE USER_ID='user05';

INSERT INTO USER_TBL VALUES(6,'user06','6666');
DELETE FROM USER_TBL WHERE USER_NO=6;
--다른 사람이 외부에서 DB 조회 시에도 COMMIT 이전 데이터까지만 출력 됨.
INSERT INTO USER_TBL VALUES(6,'user06','6666');
SAVEPOINT SP1;
INSERT INTO USER_TBL VALUES(7,'user07','7777');
-- [현재 상태 ]
-- LAST COMMIT == NO.5
-- SAVEPOINT SP1 == NO.6
-- INSERT == NO.7
ROLLBACK TO SP1; --NO.6 (1회성, 다시 저장해야만 사용 가능)
ROLLBACK; -- NO.5
COMMIT;
-- 이후, COMMIT을 하면 SAVEPOINT 저장 기록은 다 삭제됨.

-------------------------------------
--VIEW 생성
CREATE VIEW EMP_VIEW
AS
SELECT EMP_ID,EMP_NAME,PHONE,SALARY FROM EMPLOYEE;

CREATE TABLE EMP_COPY5
AS
SELECT EMP_ID,EMP_NAME,PHONE,SALARY FROM EMPLOYEE;

SELECT * FROM EMP_VIEW;
SELECT * FROM EMP_COPY5;
SELECT * FROM EMPLOYEE;

UPDATE EMP_COPY5 SET SALARY = 7000000 WHERE EMP_ID=200;
UPDATE EMP_VIEW SET SALARY = 9000000 WHERE EMP_ID=200;

-- CREATE OR REPLACE : 생성한 뷰가 없으면 새로 만들고, 이미 있따면 갱신
-- FORCE/NOFORCE : 기존 테이블이 없어도 뷰를 생성


--------------------------------------------------------
--시퀀스 : 자동 번호 생성기
/*
CREATE SEQUENCE 시퀀스이름; -- 1부터 시작해서 1씩 증가하는 시퀀스 생성

CREATE SEQUENCE 시퀀스이름
START WITH 숫자           -- 시퀀스 시작번호 설정
INCREMENT BY 숫자         -- 다음 숫자 발생시 증가폭
MAXVALUE 숫자             -- 시퀀스가 발생시키는 숫자의 최대값
[CYCLE | NOCYCLE ]       -- CYCLE : 최댓값 도달시 이후에 다시 최솟값 시작
                         -- NOCYCLE : 최댓값 도달 후 더 높아지면 에러발생
[CACHE | NOCACHE ]       -- 시퀀스 값을 메모리에서 처리할 지 결정
*/
CREATE SEQUENCE USER_NO_SEQ
START WITH 10
INCREMENT BY 10
MAXVALUE 100
NOCYCLE
NOCACHE;

SELECT USER_NO_SEQ.NEXTVAL FROM DUAL;
SELECT USER_NO_SEQ.CURRVAL FROM DUAL;
INSERT INTO USER_TBL VALUES(USER_NO_SEQ.NEXTVAL,'user10','4444');
SELECT * FROM USER_TBL;

--시퀀스 생성
--시퀀스이름 : SEQ_TEST_NO
--시작번호 : 1 증가값 5 최댓값 100 NOCYCLE,NOCACHE
CREATE SEQUENCE SEQ_TEST_NO
START WITH 1
INCREMENT BY 5
MAXVALUE 100
NOCYCLE
NOCACHE;

SELECT SEQ_TEST_NO.NEXTVAL FROM DUAL;
SELECT SEQ_TEST_NO.CURRVAL FROM DUAL;

ALTER SEQUENCE SEQ_TEST_NO
INCREMENT BY 10
MAXVALUE 55
NOCYCLE
NOCACHE;

--다른 설정값은 변경이 가능하지만 START WITH, 즉 시작번호는 선언 시 변경 불가

CREATE TABLE KH_MEMBER(
    MEMBER_ID           NUMBER  PRIMARY KEY,
    MEMBER_NAME         VARCHAR2(20) NOT NULL,
    MEMBER_AGE          NUMBER  NOT NULL,
    MEMBER_JOIN_COM     NUMBER  NOT NULL
);

CREATE SEQUENCE SEQ_KH_TEST_ID
START WITH 500
INCREMENT BY 10
MAXVALUE 10000
NOCYCLE
NOCACHE;
CREATE SEQUENCE SEQ_KH_TEST_JOIN
START WITH 1
INCREMENT BY 1
MAXVALUE 10000
NOCYCLE
NOCACHE;
DROP SEQUENCE SEQ_KH_TEST;

INSERT INTO KH_MEMBER VALUES(SEQ_KH_TEST_ID.NEXTVAL,'홍길동','20',SEQ_KH_TEST_JOIN.NEXTVAL);
INSERT INTO KH_MEMBER VALUES(SEQ_KH_TEST_ID.NEXTVAL,'김말똥','30',SEQ_KH_TEST_JOIN.NEXTVAL);
INSERT INTO KH_MEMBER VALUES(SEQ_KH_TEST_ID.NEXTVAL,'삼식이','40',SEQ_KH_TEST_JOIN.NEXTVAL);
INSERT INTO KH_MEMBER VALUES(SEQ_KH_TEST_ID.NEXTVAL,'고길동','24',SEQ_KH_TEST_JOIN.NEXTVAL);
SELECT * FROM KH_MEMBER;


----INDEX
CREATE INDEX EMP_IDX
ON 
EMPLOYEE(EMP_NAME, EMP_NO, HIRE_DATE);

SELECT EMP_NAME, EMP_NO, HIRE_DATE FROM EMPLOYEE

---------------동의어
CREATE SYNONYM EMP FOR EMPLOYEE;












