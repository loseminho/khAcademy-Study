--테이블 생성방법
-- CREATE TABLE 테이블이름(컬럼이름 자료형(크기))

CREATE TABLE MEMBER(
    MEMBER_ID   VARCHAR2(20),
    MEMBER_PW   VARCHAR2(20),
    MEMBER_NAME VARCHAR2(21)
);
SELECT * FROM MEMBER;

--테이블 컬럼 값에 대한 설명 코멘트 작성 명령어
COMMENT ON COLUMN MEMBER.MEMBER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.MEMBER_PW IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '회원이름';

--임의의 데이터 삽입
INSERT INTO MEMBER VALUES('user01','1234','유저1');

--제약조건이 하나도 없는 테이블 생성
CREATE TABLE USER_NOCONS(
    USER_NO     NUMBER,
    USER_ID     VARCHAR2(20),
    USER_PW     VARCHAR2(20),
    USER_NAME   VARCHAR2(20),
    GENDER      CHAR(6),
    PHONE       CHAR(11)
);

INSERT INTO USER_NOCONS VALUES(1,'user01','1234','유저1','여자','01011111111');
SELECT * FROM USER_NOCONS;


--제약조건 NOT NULL 설정.
CREATE TABLE USER_NOTNULL(
    USER_NO     NUMBER,
    USER_ID     VARCHAR2(30) NOT NULL,
    USER_PW     VARCHAR2(30) NOT NULL,
    USER_NAME   VARCHAR2(30) NOT NULL,
    GENDER      CHAR(6),
    PHONE       CHAR(11)
);

INSERT INTO USER_NOTNULL
VALUES(1, 'user01','1234','유저1','남자','01011111111');

--NULL을 설정해놓은 컬럼 값에 NULL을 삽입 시, 에러 발생
INSERT INTO USER_NOTNULL
VALUES(2, 'user02',NULL,'유저1','남자','01011111111');

--UNIQUE : 해당 컬럼 값의 중복을 제한
--제약조건 UNIQUE 설정.
CREATE TABLE USER_UNIQUE(
    USER_NO     NUMBER UNIQUE NOT NULL,  --UNIQUE 컬럼 레벨 설정
    USER_ID     VARCHAR2(20),
    USER_PW     VARCHAR2(20),
    USER_NAME   VARCHAR2(20),
    GENDER      CHAR(6),
    PHONE       CHAR(11),
    UNIQUE(USER_ID)            --UNIQUE 테이블 레벨 설정
);

SELECT * FROM USER_UNIQUE;
INSERT INTO USER_UNIQUE
VALUES(1,'user01','1111','유저1','남자','01011111111');

--UNIQUE을 설정해놓은 컬럼 값에 중복 값을 삽입 시, 에러 발생
INSERT INTO USER_UNIQUE
VALUES(1,'user01','1111','유저2','여자','01022222222');

--UNIQUE여도 NULL은 데이터가 아니기때문에 많이 들어갈 수 있음.
INSERT INTO USER_UNIQUE
VALUES(3,NULL,'1111','유저3','여자','01033333333');

--UNIQUE 다른 선언 방법
CREATE TABLE USER_UNIQUE2(
    USER_NO     NUMBER,
    USER_ID     VARCHAR2(20),
    USER_PW     VARCHAR2(20),
    USER_NAME   VARCHAR2(20),
    GENDER      CHAR(6),
    PHONE       CHAR(11),
    UNIQUE(USER_NO, USER_ID)        --동시에 중복값이 들어올때만 UNIQUE에 걸림
);
SELECT * FROM USER_UNIQUE2;
INSERT INTO USER_UNIQUE2
VALUES(1,'user01','1234','유저1','남자','01011111111');
INSERT INTO USER_UNIQUE2
VALUES(1,'user02','1234','유저2','남자','01022222222');

--PRIMARY KEY 설정
CREATE TABLE USER_PK1(
    USER_NO     NUMBER PRIMARY KEY, -- 컬럼 레벨에서 PK 설정
    USER_ID     VARCHAR2(20),
    USER_PW     VARCHAR2(20),
    USER_NAME   VARCHAR2(20),
    GENDER      CHAR(6),
    PHONE       CHAR(11)
);
INSERT INTO USER_PK1
VALUES(1,'user01','1234','유저1','남자','01011111111');

CREATE TABLE USER_PK2(
    USER_NO     NUMBER,
    USER_ID     VARCHAR2(20),
    USER_PW     VARCHAR2(20),
    USER_NAME   VARCHAR2(20),
    GENDER      CHAR(6),
    PHONE       CHAR(11),
    PRIMARY KEY(USER_NO)        --테이블 레벨에서 PK 설정
);

CREATE TABLE USER_PK3(
    USER_NO     NUMBER,
    USER_ID     VARCHAR2(20),
    USER_PW     VARCHAR2(20),
    USER_NAME   VARCHAR2(20),
    GENDER      CHAR(6),
    PHONE       CHAR(11),
    PRIMARY KEY(USER_NO,USER_ID)        --테이블 레벨에서 PK 설정
);

CREATE TABLE SHOP_MEMBER(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) UNIQUE NOT NULL,
    USER_PW VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(20)
);

INSERT INTO SHOP_MEMBER
VALUES(1,'user01','1111','유저1');
INSERT INTO SHOP_MEMBER
VALUES(2,'user02','2222','유저2');
INSERT INTO SHOP_MEMBER
VALUES(3,'user03','3333','유저3');
                       
SELECT * FROM SHOP_MEMBER;









